<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Model construction and solvings on</title><link>https://johnjasa.github.io/quartz/model-construction-and-solving/</link><description>Recent content in Model construction and solvings on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://johnjasa.github.io/quartz/model-construction-and-solving/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://johnjasa.github.io/quartz/Model-construction-and-solving/Adding-a-curve-fit-in-a-differentiable-way/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://johnjasa.github.io/quartz/Model-construction-and-solving/Adding-a-curve-fit-in-a-differentiable-way/</guid><description>tags: #model_construction #optimization #differentiation
Adding a curve fit in a differentiable way Main takeaway If you&amp;rsquo;re fitting a curve or surface to data and want to ever use gradient-based optimizers, make sure to do it in a differentiable way.</description></item><item><title/><link>https://johnjasa.github.io/quartz/Model-construction-and-solving/Connecting-things-vs-promoting-them/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://johnjasa.github.io/quartz/Model-construction-and-solving/Connecting-things-vs-promoting-them/</guid><description>tags: #model_construction
Connecting things vs promoting them Main takeaway You should promote variables up a level if they are generally useful at that level or used in many components, whereas you should connect variables if you need more precise control of where the data is being passed.</description></item><item><title/><link>https://johnjasa.github.io/quartz/Model-construction-and-solving/Creating-high-quality-surrogate-models/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://johnjasa.github.io/quartz/Model-construction-and-solving/Creating-high-quality-surrogate-models/</guid><description>tags: #model_construction</description></item><item><title/><link>https://johnjasa.github.io/quartz/Model-construction-and-solving/Examples-of-nonlinear-systems/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://johnjasa.github.io/quartz/Model-construction-and-solving/Examples-of-nonlinear-systems/</guid><description>tags: #model_construction
Truss solver, could make it for one particular truss curve fitting / L2 norm minimization Sellar (cyclic connections) (abstract and isn&amp;rsquo;t physical) Nonlinear circuit analysis (node voltage analysis with explicit and implicit components)</description></item><item><title/><link>https://johnjasa.github.io/quartz/Model-construction-and-solving/Fixed-point-iterators-vs-Newton/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://johnjasa.github.io/quartz/Model-construction-and-solving/Fixed-point-iterators-vs-Newton/</guid><description>tags: #model_construction</description></item><item><title/><link>https://johnjasa.github.io/quartz/Model-construction-and-solving/How-to-debug-solvers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://johnjasa.github.io/quartz/Model-construction-and-solving/How-to-debug-solvers/</guid><description>tags: #model_construction</description></item><item><title/><link>https://johnjasa.github.io/quartz/Model-construction-and-solving/Implicit-vs-explicit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://johnjasa.github.io/quartz/Model-construction-and-solving/Implicit-vs-explicit/</guid><description>tags: #model_construction
Implicit vs explicit Came up with [[Caroline Kuhnle]] Normal shock equations Can choose to get an explicit solution Or can get an implicit relation Vary parameters downstream so those balances are maintained Reminiscent of pycycle</description></item><item><title/><link>https://johnjasa.github.io/quartz/Model-construction-and-solving/Linesearch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://johnjasa.github.io/quartz/Model-construction-and-solving/Linesearch/</guid><description>tags: #model_construction</description></item><item><title/><link>https://johnjasa.github.io/quartz/Model-construction-and-solving/Nested-nonlinear-solvers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://johnjasa.github.io/quartz/Model-construction-and-solving/Nested-nonlinear-solvers/</guid><description>tags: #model_construction</description></item><item><title/><link>https://johnjasa.github.io/quartz/Model-construction-and-solving/Newtons-method-math/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://johnjasa.github.io/quartz/Model-construction-and-solving/Newtons-method-math/</guid><description>tags: #model_construction 1D 2D Visualization of planar intersections to point, x=0, y=0 Taylor series derivation Relationship to UDE
https://www.youtube.com/watch?v=HLpjUeHPnm4</description></item><item><title/><link>https://johnjasa.github.io/quartz/Model-construction-and-solving/Nonlinear-vs-linear-solvers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://johnjasa.github.io/quartz/Model-construction-and-solving/Nonlinear-vs-linear-solvers/</guid><description>tags: #model_construction</description></item><item><title/><link>https://johnjasa.github.io/quartz/Model-construction-and-solving/Single-discipline-vs-multidisciplinary/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://johnjasa.github.io/quartz/Model-construction-and-solving/Single-discipline-vs-multidisciplinary/</guid><description>tags: #model_construction</description></item><item><title/><link>https://johnjasa.github.io/quartz/Model-construction-and-solving/Types-of-solvers-and-when-to-use-them/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://johnjasa.github.io/quartz/Model-construction-and-solving/Types-of-solvers-and-when-to-use-them/</guid><description>tags: #model_construction Brent NLBGS Newton Type Broyden 2 outputs + 2 inputs -&amp;gt; BGS + cycle 2 outputs + 1 input -&amp;gt; Newton + balance comp</description></item><item><title/><link>https://johnjasa.github.io/quartz/Model-construction-and-solving/Unbalanced-nonlinearity-and-the-relationship-to-subsolvers/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://johnjasa.github.io/quartz/Model-construction-and-solving/Unbalanced-nonlinearity-and-the-relationship-to-subsolvers/</guid><description>tags: #model_construction Talk to [[Anil]] and [[Sham]]</description></item><item><title/><link>https://johnjasa.github.io/quartz/Model-construction-and-solving/Unconstrained-optimization-using-a-Newton-solver/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://johnjasa.github.io/quartz/Model-construction-and-solving/Unconstrained-optimization-using-a-Newton-solver/</guid><description>tags: #model_construction Show how to do it Show how it&amp;rsquo;s easily differentiable Example? L2 norm error min for curve fitting See python script [[Justin]] sent on [[2022-06-23]]</description></item><item><title/><link>https://johnjasa.github.io/quartz/Model-construction-and-solving/Using-groups-to-organize/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://johnjasa.github.io/quartz/Model-construction-and-solving/Using-groups-to-organize/</guid><description>tags: #model_construction
Using groups to organize models Main takeaway You should intelligently group components and subgroups in an intuitive way that makes computational and physical sense.</description></item><item><title/><link>https://johnjasa.github.io/quartz/Model-construction-and-solving/Using-N2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://johnjasa.github.io/quartz/Model-construction-and-solving/Using-N2/</guid><description>tags: #model_construction
Talk to [[Tad Kollar]] about the N2 and what to focus on No need to make any viz here, can just go through the N2 myself Will need to get some good and representative models</description></item><item><title/><link>https://johnjasa.github.io/quartz/Model-construction-and-solving/Verification-and-validation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://johnjasa.github.io/quartz/Model-construction-and-solving/Verification-and-validation/</guid><description>tags: #model_construction</description></item><item><title/><link>https://johnjasa.github.io/quartz/Model-construction-and-solving/XDSM/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://johnjasa.github.io/quartz/Model-construction-and-solving/XDSM/</guid><description>tags: #model_construction</description></item></channel></rss>