{"/":{"title":"ü™¥ Quartz 3.2","content":"\nHost your second brain and [digital garden](https://jzhao.xyz/posts/networked-thought) for free. Quartz features\n\n1. Extremely fast full-text search by pressing `Ctrl` + `k`\n2. Customizable and hackable design based on Hugo\n3. Automatically generated backlinks, link previews, and local graph\n4. Built-in [[notes/CJK + Latex Support (ÊµãËØï) | CJK + Latex Support]]\n5. Support for both Markdown Links and Wikilinks\n\n## Get Started\n\u003e üìö [Setup your own digital garden using Quartz](notes/setup.md)\n\nNot convinced yet? Look at some [community digital gardens](notes/showcase.md) built with Quartz, or read about [why I made Quartz](notes/philosophy.md) to begin with.\n\n## Content Lists\nIf you prefer browsing the contents of this site through a list instead of a graph, you can find content lists here too:\n\n- [All Notes](/notes)\n- [Setup-related Notes](/tags/setup)\n\n## Troubleshooting\n- üöß [Troubleshooting and FAQ](notes/troubleshooting.md)\n- üêõ [Submit an Issue](https://github.com/jackyzha0/quartz/issues)\n- üëÄ [Discord Community](https://discord.gg/cRFFHYye7t)\n","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Collections-of-lessons/0-to-optimization-in-10-steps":{"title":"","content":"tags: #lesson\n\n# Zero to optimization in ten steps\n\nThis guide serves as a medium-length approach to developing an understanding of how to perform multidisciplinary design optimization (MDO) assuming no prior knowledge of MDO.\nWe assume that you have college-level training in engineering concepts, including differential equations, Python programming, and basic numerical methods.\nAdditionally, most all of the examples use OpenMDAO, so having experience with it or going through the documentation is beneficial.\n\nAlso, step 10 could arguably come first as it might inform how you set up the filesystem for these models and optimizations.\n\n\n1) Building uncoupled feed forward models\n\t1) [[Using groups to organize]]\n\t2) [[Connecting things vs promoting them]]\n\t3) [[Using N2]]\n2) Problem formulation\n\t1) [[Basic optimization problem formulation]]\n\t2) [[Multiobjective optimization]]\n\t3) Optional: [[Slack variables vs equality constraints]]\n\t4) Optional: [[How to deal with discrete variables]]\n3) Simple gradient-free opt\n\t1) [[When to use gradient-free optimizers]]\n\t2) [[Types of gradient-free optimizers]]\n4) Get partial derivatives\n\t1) [[Common ways to compute derivatives]]\n5) Gradient-based opt\n\t1) [[Why to use gradient-based optimizers]]\n\t2) [[Types of gradient-based optimizers]]\n6) Building coupled models\n\t1) [[Implicit vs explicit]]\n\t2) [[Fixed point iterators vs Newton]]\n7) Gradient-free multidisciplinary optimization\n8) Total derivatives for coupled models\n\t1) [[Nonlinear vs linear solvers]]\n\t2) [[Total vs partial derivatives]]\n9) Gradient-based multidisciplinary optimization\n10) Coding standards and best practices\n\t1) [[Git]]\n\t2) [[Folder and package structure]]\n\t3) [[Tests]]\n\t4) [[CI]]","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Collections-of-lessons/Checklist-for-doing-good-optimziation":{"title":"","content":"tags: #lesson \n\n# Checklist for doing good optimization\n\n## Main message\nA systematic approach is needed to solve complex MDO problems and understand the results. This set of lessons provides a helpful checklist to follow.\n\n## Optimization Checklists\n\nHere are general checklists for before and after solving optimization problems.\nThe idea and outline of this checklist came primarily from MDO Lab researchers, including [[Sham]] and [[Neil]].\n\n## General pre-optimization checklist\n\n1.  **Write down a formal optimization problem formulation** (preferably in latex so that you can update and reuse it).\n\n   - If you don't know what this is, see Prof. Martins' MDO `book \u003chttps://mdobook.github.io\u003e`_.\n   - See previous papers for examples (e.g., Table 2 in https://doi.org/10.2514/1.C034934).\n   - This will include the objective function, the constraint functions, and the design variables (with bounds).\n   - This will help make sure that you do not start solving the wrong problem.\n   - Also related to [[Basic optimization problem formulation]] and [[Advanced problem formulation]]\n   - Viz: optimization problem coming together, highlight the objective, constraints, and design variables\n\n2. Think hard about whether a **simpler optimization problem can be solved first**.\n\n   - e.g., before trying a twist and shape aerodynamic optimization, first try a twist-only optimization.\n   - This approach of building up your optimization problem complexity will make it easier to troubleshoot and explain results.\n   - Starting with cheaper test cases can also help with debugging (e.g., optimizing with a coarse mesh first).\n   - If this is applicable, go through all the checklists for the simpler problems as well\n   - Viz: Show a highly dimensional problem and then show a simpler one?\n\n3. **Carry out some kind of verification (and validation when possible)** for your simulations.\n\n   - Come up with tests to verify that the code is behaving as intended.\n   - For validation, compare results to theoretical predictions, experimental data, or other trustworthy results.\n   - Viz: V\u0026V is necessary to trust the results\n   - Also see [[Verification and validation]]\n\n4. **Verify your gradients** (or hope that you get lucky and the optimization converges well). Options include:\n\n   - manually comparing values with finite-difference and complex-step estimates\n   - this is only if we're using gradient-based optimizers\n   - SNOPT's finite-difference check printed in the SNOPT_print.out file (the default is a \"cheap\" test in one direction; see the `SNOPT guide \u003chttps://ccom.ucsd.edu/~optimizers/static/pdfs/snopt7-7.pdf\u003e`_ for more options)\n   - the ``check_partials`` method if using OpenMDAO (just another convenient way to compare with finite-difference and complex-step estimates)\n   - [[Checking your derivatives]]\n\n5. Unless you have a good reason to do otherwise, **use scaling such that the design variable ranges and the values of the objective and constraint functions will be around 1** (this may not be applicable for all optimizers but definitely is for SNOPT, our most used optimizer).\n\n   - This should help avoid unwanted behavior (e.g., difficulties converging; e.g., achieving specified tolerances when far from an optimum because of the scaling), but this is not a perfect strategy and further experimenting may be necessary.\n   - With SNOPT, when the constraints are satisfied with this scaling strategy, the optimality criterion will reflect roughly how much the objective function can change.\n   - This is related to [[Basic scaling techniques]] and [[Automatic scaling techniques]]\n\n  6. **Double check your initial design**.\n\n   - Make a checklist of important parameters and check them.\n   - e.g., geometry dimensions and units, FFD control-point locations, grid spacings, etc.\n\n7. **Check whether your design variables behave as expected**.\n\n   - e.g., perturbing the FFD grid and checking the deformed shape of the surface\n   - Viz: show a parameter sweep of results\n\n8. **Check and note down the optimization tolerances being used** (or other termination criteria). This helps you verify that the optimizer converges as much as you need.\n\n9. **Double check that your script reflects your optimization problem formulation.**\n\n   - Make a checklist using the problem formulation from step 0 and check.\n   - e.g., checking that the specified values for the design variable bounds are correct\n\n10. **Check the optimization problem setup by running a couple optimization iterations** and examining the results.\n\n   - e.g., check the number of design variables and constraints in the optimizer's output\n   - Use `debug_print` at OpenMDAO\n\n\n## General post-optimization checklist\n1. What is the exit information (did the optimization problem actually converge or did it terminate prematurely)?\n2. Are any of the design variables at their bounds? If yes, is that acceptable?\n3. If the problem did converge, come up with and carry out sanity checks for the results.\n4. If the problem did not converge, check if the analyses and gradient computations converged.\n\n   - e.g., there may be analysis errors due to mesh failures or solver divergence\n   - e.g., the analysis or gradient tolerances may be too large to provide the accuracy necessary to achieve the specified optimization tolerances\n\n5. If the problem did not converge and there are no problems with the analyses and gradients, experiment with scaling and check the pre-optimization checklist again.\n6. If the problem did not converge and you checked all the above, ask for help!\n\n## Checklist for showing results \n\nAlong with the plots and images that you consider relevant, include the following information:\n\n1. Optimization problem formulation\n2. Optimizer name, specified optimization tolerances (or other termination criteria), and scaling.\n3. The termination information and the tolerances achieved\n   - If using SNOPT, the exit code and its description (see :ref:`SNOPTGuide` for the common exit codes, and see the `SNOPT guide \u003chttps://ccom.ucsd.edu/~optimizers/static/pdfs/snopt7-7.pdf\u003e`_ for more)\n4. If using SNOPT, include the value of ``-log10(Max Dual infeas/Max pi)``.\n\n   - This should give an estimate for which significant digit can be expected to change if the optimization could continue. (See the `SNOPT guide \u003chttps://ccom.ucsd.edu/~optimizers/static/pdfs/snopt7-7.pdf\u003e`_ for more)\n\n5. If design variables are at their bounds, which ones\n6. The lists of checks you did for the `verification and validation`_ , `gradient`_, `initial design`_, and `design variables`_ items in the pre-optimization checklist\n7. Which steps of the pre-optimization checklist were skipped and why","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Collections-of-lessons/What-to-do-when-someone-gives-you-a-model":{"title":"","content":"tags: #lesson \n\n# What to do when someone gives you a model\n## Main takeaway\nYou must understand the model, how data is passed, the design space, etc.\n\n\n# Steps\n1. Examine the N2 diagram [[Using N2]]\n2. Perform a `run_model` instance and examine that the inputs and outputs match your expectations. This is related to [[Verification and validation]]\n3. ","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Danny":{"title":"","content":"","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Introduction-and-context/CI":{"title":"","content":"tags: #intro","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Introduction-and-context/Folder-and-package-structure":{"title":"","content":"tags: #intro","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Introduction-and-context/Git":{"title":"","content":"tags: #intro","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Introduction-and-context/Intro":{"title":"","content":"tags: #intro\n\n\n## Main points\n- Course designed for MDO practitioners\n- Assumes you have college-level engineering, differential equations, and numerical methods understanding\n- Assumes you have some Python and OpenMDAO experience\n- If you want to learn Python or OM, use these resources\n- If you want to learn the theory, read the MDO Book or other papers or resources\n- The ideas presented here come from decades of person-years experience from NASA Glenn Research Center, the MDO Lab at the University of Michigan, and other contributors.\n\n## Aims of the course\n- Codify a lot of the learned knowledge that exists between theory and implementation\n- This knowledge is required to perform MDAO well\n- Also see [[What this course is and isn't]] for more info\n\n## Foundation for the course\n- There are three main interconnected concepts required to perform good MDAO, as presented here: https://openmdao.org/the-3-keys-to-success-in-mdao/\n- Those are model construction, model differentiation, and nonlinear optimization\n- These concepts cannot be examined linearly as they are tightly connected in many ways\n- We must jump between the three broad categories often and purposefully to better connect learning from these modules\n- With that in mind, we've developed a small graphic to help reinforce when we are examining a concept from those broad categories. (this could be a three-part Venn diagram with the circle, first illustrated in manim)\n\n## This course's format\n- This course is meant to be processed asynchronously without input from anyone else both as an initial teaching tool and as a reference during future MDO\n- Specifically, this is to help onboard NASA engineers joining aeronautics research projects, but is broadly helpful. See [[Who is this course useful for]]\n- The course is a collection of mini-lecture YouTube videos\n- These videos are compiled into distinct playlists\n- Some of these playlists are for each of the broad categories, but there are also playlists for specific purposes or use cases\n- A \"choose your own adventure\" approach is also presented to help highlight possible paths through this course material","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Introduction-and-context/Tests":{"title":"","content":"tags: #intro","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Introduction-and-context/What-this-course-is-and-isnt":{"title":"","content":"tags: #intro\n\nNot how to write a component\nBut more *why* you do certain things\nPractical MDO\nNOT the book\nhttps://flowlab.groups.et.byu.net/mdobook.pdf\n\nHow to organize a large scale MDO model\n","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Introduction-and-context/Who-is-this-course-useful-for":{"title":"","content":"tags: #intro \n\nThis course is useful for people who want to perform MDO in an effective and impactful manner. It should be helpful for people who are constructing multidisciplinary models, performing exploratory analyses, and examining the design space through automated optimization. Industry practitioners, researchers, students, and others might find this course useful.\n\n","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Model-construction-and-solving/Adding-a-curve-fit-in-a-differentiable-way":{"title":"","content":"tags: #model_construction #optimization #differentiation \n\n# Adding a curve fit in a differentiable way\n## Main takeaway\nIf you're fitting a curve or surface to data and want to ever use gradient-based optimizers, make sure to do it in a differentiable way.\n\n## Intro and motivation\nThere are times that we want to fit a curve to data.\nThis data can be 1-dimensional or n-dimensional and may be regularly spaced, irregularly spaced, or sparse.\nThese fits go by many names, including regressions, surrogate models, metamodels, splines, and response surfaces.\nThis topic is inherently related to all three broad categories in the course.\n\nThis problem naturally crops up in many different places, such as:\n- Engine performance data (reach out to [[Justin]] for example from MIT guy)\n- Aerodynamic lift data\n- Resource mapping (gold, weather, etc)\n\nFor simplicity, we will use 1-dimensional examples here.\n\n## Simple approach\n\nA straightforward approach is a piecewise linear approximation of the data set.\nHowever, this produces C1 discontinuities at the data points, which means that the derivative changes instantly and thus is not well-defined.\nThis potentially causes a problem for gradient-based optimizers who rely on accurate and smooth gradient information.\n\nImagine when the optimal point is near one of those discontinuous points.\nThe optimizer would struggle to correctly iterate there and may be ill-behaved.\n\n## How to add a smooth and differentiable curve fit\n\nInstead of using a piecewise linear fit, we could use a piecewise cubic spline, or many other forms of nonlinear surrogate modeling techniques.\nTake our example from before and fit a piecewise cubic spline to it.\nNow the resulting interpolation is smooth, continuous, and well-suited for gradient-based optimizers.\n\nThere are many packages to help you do this, including Scipy, SMT, and OpenMDAO.\nOpenMDAO has built-in components to help you do this, including `SplineComp` and `MetaModels`.\nThese all compute the derivatives automatically by using the built-in functionality provided by OpenMDAO.\n\nAll this being said, getting a reasonable and accurate fit for your data is important.\nAlways verify the correctness of your curve fits by performing leave-one-out and other testing.\n[[Creating high-quality surrogate models]] has much more information about this.","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Model-construction-and-solving/Connecting-things-vs-promoting-them":{"title":"","content":"tags: #model_construction\n\n# Connecting things vs promoting them\n## Main takeaway\nYou should promote variables up a level if they are generally useful at that level or used in many components, whereas you should connect variables if you need more precise control of where the data is being passed.\n\n## What does promoting mean\nPromoting is when you push a variable up a level. This allows it to come from the component level and go up to the group level. Then, any component that also promotes that variable has access to it within that group.\n\nYou must promote both the inputs and outputs if you want them to be linked. OpenMDAO specifically has different keyword args for that, or you can use promotes straight up.\n\nYou can also change the name of what you're promoting by using a tuple instead of just the string of the name.\n\nPromoting with a wildcard is a personal preference that might be valid for small models but becomes untenable with larger models. We highly suggest you explicitly name what you are promoting to make it clear what is coming in and out of the system.\n\nTODO: viz showing block groups and promoting variables up\n\n## What does connecting mean?\nConnecting means that you specifically call out where the variable is coming from and going. This allows precise control over the variable passing. This is especially useful when you might have multiple versions of something with the same name and want to keep them separate. For instance, the cargo load of a plane within a fleet of planes.\n\nConnecting often takes a bit more time and effort to get right as you need to know where in your model the variables live that you want to connect.\n\nThere are some handy Python manipulations to help you achieve a fully connected model a bit faster. F-strings are amazingly helpful, and if you have many connections coming from the same models you can add shortcuts to make your code more readable.\n\nIt's also a bit easier to do connections that are based on logic as compared to promotions.\n\n## We need to discuss absolute vs promoted names\nIn OpenMDAO, there are two types of names for a single variable. There's the absolute name, which is where it lives in absolute terms within the model. This means that all groups and components are represented in the name. If you have a very nested variable, this name might be quite long.\n\nThere's also the promoted name, which is a moniker available when you promote variables. You can access variables via this name once you pass them up to different levels.\n\nViz showing the promoted and absolute name and how it shifts","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Model-construction-and-solving/Creating-high-quality-surrogate-models":{"title":"","content":"tags: #model_construction ","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Model-construction-and-solving/Examples-of-nonlinear-systems":{"title":"","content":"tags: #model_construction\n\nTruss solver, could make it for one particular truss\ncurve fitting / L2 norm minimization\nSellar (cyclic connections) (abstract and isn't physical)\nNonlinear circuit analysis (node voltage analysis with explicit and implicit components)\n\nNeed some good examples to use balance comp\nCyclic connections\n2D airfoil on a spring (vectorized?)\nEigenvalue solve! (look at Graeme's example for singularity)\n\nNeed examples for debugging bad solver behavior\n- out of order calcs create fake implicitness\n- pycycle case - guessing and manual convergence (talk to [[Jennifer]])\n- linesearch bounds issues\n- check with Ben for some simple solver cases he might have made for a class\n\nNormal shock equations, especially relevant for [[Implicit vs explicit]]\n\nNote from [[Eric]]: focus on giving practical engineering problems\n","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Model-construction-and-solving/Fixed-point-iterators-vs-Newton":{"title":"","content":"tags: #model_construction","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Model-construction-and-solving/How-to-debug-solvers":{"title":"","content":"tags: #model_construction","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Model-construction-and-solving/Implicit-vs-explicit":{"title":"","content":"tags: #model_construction\n\n# Implicit vs explicit\nCame up with [[Caroline Kuhnle]]\nNormal shock equations\nCan choose to get an explicit solution\nOr can get an implicit relation\nVary parameters downstream so those balances are maintained\nReminiscent of pycycle\n","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Model-construction-and-solving/Linesearch":{"title":"","content":"tags: #model_construction","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Model-construction-and-solving/Nested-nonlinear-solvers":{"title":"","content":"tags: #model_construction","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Model-construction-and-solving/Newtons-method-math":{"title":"","content":"tags: #model_construction \n1D\n2D\nVisualization of planar intersections to point, x=0, y=0\nTaylor series derivation\nRelationship to UDE\n\nhttps://www.youtube.com/watch?v=HLpjUeHPnm4\n","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Model-construction-and-solving/Nonlinear-vs-linear-solvers":{"title":"","content":"tags: #model_construction","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Model-construction-and-solving/Single-discipline-vs-multidisciplinary":{"title":"","content":"tags: #model_construction","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Model-construction-and-solving/Types-of-solvers-and-when-to-use-them":{"title":"","content":"tags: #model_construction \nBrent\nNLBGS\nNewton Type\nBroyden\n2 outputs + 2 inputs -\u003e BGS + cycle\n2 outputs + 1 input -\u003e Newton + balance comp","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Model-construction-and-solving/Unbalanced-nonlinearity-and-the-relationship-to-subsolvers":{"title":"","content":"tags: #model_construction \nTalk to [[Anil]] and [[Sham]]","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Model-construction-and-solving/Unconstrained-optimization-using-a-Newton-solver":{"title":"","content":"tags: #model_construction \nShow how to do it\nShow how it's easily differentiable\nExample? L2 norm error min for curve fitting\nSee python script [[Justin]] sent on [[2022-06-23]]\n","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Model-construction-and-solving/Using-N2":{"title":"","content":"tags: #model_construction\n\nTalk to [[Tad Kollar]] about the N2 and what to focus on\nNo need to make any viz here, can just go through the N2 myself\nWill need to get some good and representative models\n\nStart with a ridiculously simple one\nThen show a wind turbine problem since it follows the load path of the wind\nThen show one that has a less clear path through the physical meaning\n\nLean on existing resources like the YouTube video from the past","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Model-construction-and-solving/Using-groups-to-organize":{"title":"","content":"tags: #model_construction\n\n# Using groups to organize models\n\n## Main takeaway\nYou should intelligently group components and subgroups in an intuitive way that makes computational and physical sense.\n\n## What is the best size for groups?\nThe best way to set up components, groups, and groups of groups, is quite subjective. Depending on the problem you're solving, it might make sense to have just one top level group if it is a small problem. However, most complex optimization problems very quickly get groups of groups.\n\nPyCycle, for example, has many components that live inside of each of its groups. These groups are often then nested within other groups. This allows for a more clear delineation of engine components and setting them up to talk to each other.\n\n## Usually you want your top-level groups to be a physical system or discipline\nAn example within aircraft would be having a top-level group for the wing, thermal systems, propulsion, weights, etc. For a wind turbine you might have blade, tower, nacelle, foundation groups. Within these top-level groups you can have subgroups that have more delineation for the actual computations.\n\nThere's a subtlety in terms of how people consider groups. Sometimes it might make sense to group all analyses for a given discipline at the top level, or it might make sense to have the physical systems represented at the top level. For instance, should you have an aerodynamic representation of the wing, fuselage, and tail of the airplane all within one group called \"Aerodynamics\"? Or should you instead have an \"aerodynamics\" subgroup inside each top-level group called \"wing\", \"tail\", and \"fuselage\"? There is no definite answer and the best practice varies based on the complexity and purpose of your model.\n\n","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Model-construction-and-solving/Verification-and-validation":{"title":"","content":"tags: #model_construction ","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Model-construction-and-solving/XDSM":{"title":"","content":"tags: #model_construction","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Model-differentiation/Advanced-techniques":{"title":"","content":"tags: #differentiation\nAggregation\nSigmoid\nKS/pnorm","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Model-differentiation/Advanced-techniques-related-to-derivatives":{"title":"","content":"tags: #differentiation\nAggregation\nSigmoid\nKS/pnorm","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Model-differentiation/Advanced-ways-to-compute-derivatives":{"title":"","content":"tags: #differentiation \nCS, AD, UDE","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Model-differentiation/Checking-your-derivatives":{"title":"","content":"tags: #differentiation \n\n","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Model-differentiation/Common-non-differentiable-situations":{"title":"","content":"tags: #differentiation \nIf-conditions, singularities, for loops\n","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Model-differentiation/Common-ways-to-compute-derivatives":{"title":"","content":"tags: #differentiation \nFD, chain rule","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Model-differentiation/Computing-derivatives-of-implicit-functions":{"title":"","content":"tags: #differentiation \nFD, chain rule, semi-analytic\n","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Model-differentiation/Derivatives-of-vector-valued-functions":{"title":"","content":"tags: #differentiation \nDiagnoal, non-diagonal, sparse","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Model-differentiation/Hierarchical-linear-solvers":{"title":"","content":"tags: #differentiation \n","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Model-differentiation/How-to-structure-your-code-to-be-easily-differentiable":{"title":"","content":"tags: #differentiation","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Model-differentiation/Partial-derivatives-coloring":{"title":"","content":"tags: #differentiation","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Model-differentiation/Total-derivative-coloring":{"title":"","content":"tags: #differentiation","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Model-differentiation/Total-vs-partial-derivatives":{"title":"","content":"tags: #differentiation","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Model-differentiation/UDE-derivative-not-needed":{"title":"","content":"tags: #differentiation","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Model-differentiation/When-and-how-to-use-matrix-free-derivatives":{"title":"","content":"tags: #differentiation \nLBGNS -\u003e chain rule explanation (relate to AD)","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Optimization/Advanced-problem-formulation":{"title":"","content":"tags: #optimization\n\nSlack variables\nEq constraints vs balance\nMDF vs IDF vs SAND\nReparameterizing DVs that are coupled","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Optimization/Automatic-scaling-techniques":{"title":"","content":"tags: #optimization","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Optimization/Basic-optimization-problem-formulation":{"title":"","content":"tags: #optimization \nObjectives and constraints are functions of interest\nInequality vs equality constraints\nWell defined and poorly defined problems (hand coded brachistochrone?)","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Optimization/Basic-scaling-techniques":{"title":"","content":"tags: #optimization","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Optimization/Bound-constraints-vs-inequality-constraints":{"title":"","content":"tags: #optimization","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Optimization/Categories-of-optimizers":{"title":"","content":"tags: #optimization \n\nGradient-free vs gradient-based\nShould hopefully start with gradient-based","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Optimization/Constrained-optimization":{"title":"","content":"tags: #optimization \nConstrained optimization can be transformed into a Newton solve with KKT conditions","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Optimization/Debugging-techniques-and-best-practices":{"title":"","content":"tags: #optimization","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Optimization/Examples-for-optimization":{"title":"","content":"tags: #optimization \nManual brachistochrone\nTruss problem\nCircuit problem\nMultipoint something (aerostructural)\nUQ something\nMin the max eigenvalue\n","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Optimization/How-to-deal-with-discrete-variables":{"title":"","content":"tags: #optimization","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Optimization/How-to-use-optimization-to-explore-the-design-space":{"title":"","content":"tags: #optimization \n\nCould just use solvers for some variables\nWant to do it as an optimizer to explore the design space\nIt's how you solve underdefined problems\n\nFrame it as a way to explore design space\n\nDo this earlier in the course","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Optimization/Mindset-of-optimization":{"title":"","content":"tags: #optimization \nView an optimizer like a solver for under defined problems","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Optimization/Multiobjective-optimization":{"title":"","content":"tags: #optimization \nWeighted sum\nEpsilon constraint method\nNormal boundary method?\n","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Optimization/Nested-optimization-techniques":{"title":"","content":"tags: #optimization \nShow why it's limited\nShow how to do it well\nShow when it's useful for bumpy problems\nLook into Tucker's motor example case","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Optimization/Optimal-control-and-time-dependent-problems":{"title":"","content":"tags: #optimization","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Optimization/Postprocessing-optimizations":{"title":"","content":"tags: #optimization \nCase recording\nBugs and tracking them down\n\nSolver vs driver vs system case recording\nWhich do I use?\nHow do I do simple postprocessing\n\n[[Danny]] did the docs\n\nCourse can be distilling the why\nDocs could be refreshed on case recording\n","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Optimization/Selecting-a-good-parameterization":{"title":"","content":"tags: #optimization \n\n","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Optimization/Slack-variables-vs-equality-constraints":{"title":"","content":"tags: #optimization \n\n","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Optimization/Surrogate-based-optimization":{"title":"","content":"#optimization \n\nMakes a lot of sense often\nCan really smooth out the design space this way\nIt sometimes is costly to perform optimization across this\nInherently related to [[Creating high-quality surrogate models]] too","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Optimization/Types-of-gradient-based-optimizers":{"title":"","content":"tags: #optimization \n\n","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Optimization/Types-of-gradient-free-optimizers":{"title":"","content":"tags: #optimization \n\n","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Optimization/Uncertainty-quantification-methods":{"title":"","content":"tags: #optimization \n\nQuadratures\nMonte Carlo","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Optimization/Understanding-compute-cost-for-optimization":{"title":"","content":"tags: #optimization \nDerivatives\nNL solve at beginning vs end (not sure what this means)","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Optimization/Understanding-the-design-space-through-parameter-sweeps":{"title":"","content":"tags: #optimization ","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Optimization/Weird-optimization-situations":{"title":"","content":"tags: #optimization \nVariables transformations\nSeperable objectives (sum of two = 1)\nWeird constraint effects\nRelaxation","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Optimization/When-to-use-gradient-free-optimizers":{"title":"","content":"tags: #optimization \n","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Optimization/Why-is-optimization-convergence-important":{"title":"","content":"tags: #optimization \nSo you get smooth trends!","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/Optimization/Why-to-use-gradient-based-optimizers":{"title":"","content":"tags: #optimization","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/notes/CJK-+-Latex-Support-%E6%B5%8B%E8%AF%95":{"title":"CJK + Latex Support (ÊµãËØï)","content":"\n## Chinese, Japanese, Korean Support\nÂá†‰πéÂú®Êàë‰ª¨ÊÑèËØÜÂà∞‰πãÂâçÔºåÊàë‰ª¨Â∑≤ÁªèÁ¶ªÂºÄ‰∫ÜÂú∞Èù¢„ÄÇ\n\nÏö∞Î¶¨Í∞Ä Í∑∏Í≤ÉÏùÑ ÏïåÍ∏∞ÎèÑ Ï†ÑÏóê Ïö∞Î¶¨Îäî ÎïÖÏùÑ Îñ†ÎÇ¨ÏäµÎãàÎã§.\n\nÁßÅ„Åü„Å°„Åå„Åù„Çå„ÇíÁü•„Çã„Åª„ÅºÂâç„Å´„ÄÅÁßÅ„Åü„Å°„ÅØÂú∞Èù¢„ÇíÈõ¢„Çå„Å¶„ÅÑ„Åæ„Åó„Åü„ÄÇ\n\n## Latex\n\nBlock math works with two dollar signs `$$...$$`\n\n$$f(x) = \\int_{-\\infty}^\\infty\n    f\\hat(\\xi),e^{2 \\pi i \\xi x}\n    \\,d\\xi$$\n\t\nInline math also works with single dollar signs `$...$`. For example, Euler's identity but inline: $e^{i\\pi} = 0$\n\nAligned equations work quite well:\n\n$$\n\\begin{aligned}\na \u0026= b + c \\\\ \u0026= e + f \\\\\n\\end{aligned}\n$$\n\nAnd matrices\n\n$$\n\\begin{bmatrix}\n1 \u0026 2 \u0026 3 \\\\\na \u0026 b \u0026 c\n\\end{bmatrix}\n$$\n\n## RTL\nMore information on configuring RTL languages like Arabic in the [config](notes/config.md) page.\n","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/notes/config":{"title":"Configuration","content":"\n## Configuration\nQuartz is designed to be extremely configurable. You can find the bulk of the configuration scattered throughout the repository depending on how in-depth you'd like to get.\n\nThe majority of configuration can be be found under `data/config.yaml`. An annotated example configuration is shown below.\n\n```yaml\nname: Your name here! # Shows in the footer\nenableToc: true # Whether to show a Table of Contents\nenableLinkPreview: true # whether to render card previews for links\ndescription: Page description to show to search engines\npage_title: Quartz Example Page # Default Page Title\n\nlinks: # Links to show in footer\n  - link_name: Twitter\n    link: https://twitter.com/_jzhao\n  - link_name: Github\n    link: https://github.com/jackyzha0\n```\n\n### Graph View\nTo customize the Interactive Graph view, you can poke around `data/graphConfig.yaml`.\n\n```yaml\nenableLegend: false # automatically generate a legend\nenableDrag: true # allow dragging nodes in the graph\nenableZoom: true # allow zooming and panning the graph\ndepth: -1 # how many neighbours of the current node to show (-1 is all nodes)\npaths: # colour specific nodes path off of their path\n  - /moc: \"#4388cc\"\n```\n\n\n## Styling\nWant to go even more in-depth? You can add custom CSS styling and change existing colours through editing `assets/styles/custom.scss`. If you'd like to target specific parts of the site, you can add ids and classes to the HTML partials in `/layouts/partials`. \n\n### Partials\nPartials are what dictate what actually gets rendered to the page. Want to change how pages are styled and structured? You can edit the appropriate layout in `/layouts`.\n\nFor example, the structure of the home page can be edited through `/layouts/index.html`. To customize the footer, you can edit `/layouts/partials/footer.html`\n\nMore info about partials on [Hugo's website.](https://gohugo.io/templates/partials/)\n\nStill having problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n\n## Multilingual\n[CJK + Latex Support (ÊµãËØï)](notes/CJK%20+%20Latex%20Support%20(ÊµãËØï).md) comes out of the box with Quartz.\n\nWant to support languages that read from right-to-left (like Arabic)? Hugo (and by proxy, Quartz) supports this natively.\n\nFollow the steps [Hugo provides here](https://gohugo.io/content-management/multilingual/#configure-languages) and modify your `config.toml`\n\nFor example:\n\n```toml\ndefaultContentLanguage = 'ar'\n[languages]\n  [languages.ar]\n    languagedirection = 'rtl'\n    title = 'ŸÖÿØŸàŸÜÿ™Ÿä'\n    weight = 1\n```\n","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/notes/custom-Domain":{"title":"Custom Domain","content":"\n### Registrar\nThis step is only applicable if you are using a **custom domain**! If you are using a `\u003cYOUR-USERNAME\u003e.github.io` domain, you can skip this step.\n\nFor this last bit to take effect, you also need to create a CNAME record with the DNS provider you register your domain with (i.e. NameCheap, Google Domains).\n\nGitHub has some [documentation on this](https://docs.github.com/en/pages/configuring-a-custom-domain-for-your-github-pages-site/managing-a-custom-domain-for-your-github-pages-site), but the tldr; is to\n\n1. Go to your forked repository (`github.com/\u003cYOUR-GITHUB-USERNAME\u003e/quartz`) settings page and go to the Pages tab. Under \"Custom domain\", type your custom domain, then click **Save**.\n2. Go to your DNS Provider and create a CNAME record that points from your domain to `\u003cYOUR-GITHUB-USERNAME.github.io.` (yes, with the trailing period).\n\n\t![Example Configuration for Quartz](/notes/images/google-domains.png)*Example Configuration for Quartz*\n3. Wait 30 minutes to an hour for the network changes to kick in.\n4. Done!","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/notes/editing":{"title":"Editing Content in Quartz","content":"\n## Editing \nQuartz runs on top of [Hugo](https://gohugo.io/) so all notes are written in [Markdown](https://www.markdownguide.org/getting-started/).\n\n### Obsidian\nI recommend using [Obsidian](http://obsidian.md/) as a way to edit and grow your digital garden. It comes with a really nice editor and graphical interface to preview all of your local files.\n\nThis step is **highly recommended**.\n\nüîó [How to setup your Obsidian Vault to work with Quartz](notes/obsidian.md)\n\n### Ignoring Files\nOnly want to publish a subset of all of your notes? Don't worry, Quartz makes this a simple two-step process.\n\n‚ùå [Excluding pages from being published](notes/ignore%20notes.md)\n\n### Folder Structure\nHere's a rough overview of what's what.\n\n**All content in your garden can found in the `/content` folder.** To make edits, you can open any of the files and make changes directly and save it. You can organize content into any folder you'd like.\n\n**To edit the main home page, open `/content/_index.md`.*\n\nTo create a link between notes in your garden, just create a normal link using Markdown pointing to the document in question. Please note that **all links should be relative to the root `/content` path**. \n\n```markdown\nFor example, I want to link this current document to `notes/config.md`.\n[A link to the config page](notes/config.md)\n```\n\nSimilarly, you can put local images anywhere in the `/content` folder.\n\n```markdown\nExample image (source is in content/notes/images/example.png)\n![Example Image](/content/notes/images/example.png)\n```\n\n### Front Matter\nHugo is picky when it comes to metadata for files. Make sure that your title is double-quoted and that you have a title defined at the top of your file like so. You can also add tags here as well.\n\n```markdown\n---\ntitle: \"Example Title\"\ntags:\n- example-tag\nenableToc: false # do not show a table of contents on this page\n---\n\nRest of your content here...\n```\n\n## Previewing Changes\nThis step is purely optional and mostly for those who want to see the published version of their digital garden locally before opening it up to the internet. This is *highly recommended* but not required.\n\nüëÄ [Preview Quartz Changes](notes/preview%20changes.md)\n\nFor those who like to live life more on the edge, viewing the garden through Obsidian gets you pretty close to the real thing.\n\n## Publishing Changes\nNow that you know the basics of managing your digital garden using Quartz, you can publish it to the internet!\n\nüåç [Hosting Quartz online!](notes/hosting.md)\n\nHaving problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/notes/hosting":{"title":"Deploying Quartz to the Web","content":"\n## GitHub Pages\nQuartz is designed to be effortless to deploy. If you forked and cloned Quartz directly from the repository, everything should already be good to go! Follow the steps below.\n\n### Enable GitHub Actions\nBy default, GitHub disables workflows from running automatically on Forked Repostories. Head to the 'Actions' tab of your forked repository and Enable Workflows to setup deploying your Quartz site!\n\n![Enable GitHub Actions](notes/images/github-actions.png)*Enable GitHub Actions*\n\n### Enable GitHub Pages\n\nHead to the 'Settings' tab of your forked repository and go to the 'Pages' tab.\n\n1. (IMPORTANT) Set the source to deploy from `master` (and not `hugo`) using `/ (root)`\n2. Set a custom domain here if you have one!\n\n![Enable GitHub Pages](/notes/images/github-pages.png)*Enable GitHub Pages*\n\n### Pushing Changes\nTo see your changes on the internet, we need to push it them to GitHub. Quartz is a `git` repository so updating it is the same workflow as you would follow as if it were just a regular software project.\n\n```shell\n# Navigate to Quartz folder\ncd \u003cpath-to-quartz\u003e\n\n# Commit all changes\ngit add .\ngit commit -m \"message describing changes\"\n\n# Push to GitHub to update site\ngit push origin hugo\n```\n\nNote: we specifically push to the `hugo` branch here. Our GitHub action automatically runs everytime a push to is detected to that branch and then updates the `master` branch for redeployment.\n\n### Setting up the Site\nNow let's get this site up and running. Never hosted a site before? No problem. Have a fancy custom domain you already own or want to subdomain your Quartz? That's easy too.\n\nHere, we take advantage of GitHub's free page hosting to deploy our site. Change `baseURL` in `/config.toml`.\n\nMake sure that your `baseURL` has a trailing `/`!\n\n[Reference `config.toml` here](https://github.com/jackyzha0/quartz/blob/hugo/config.toml)\n\n```toml\nbaseURL = \"https://\u003cYOUR-DOMAIN\u003e/\"\n```\n\nIf you are using this under a subdomain (e.g. `\u003cYOUR-GITHUB-USERNAME\u003e.github.io/quartz`), include the trailing `/`.\n\n```toml\nbaseURL = \"https://\u003cYOUR-GITHUB-USERNAME\u003e.github.io/quartz/\"\n```\n\nChange `cname` in `/.github/workflows/deploy.yaml`. Again, if you don't have a custom domain to use, you can use `\u003cYOUR-USERNAME\u003e.github.io`.\n\nPlease note that the `cname` field should *not* have any path `e.g. end with /quartz` or have a trailing `/`.\n\n[Reference `deploy.yaml` here](https://github.com/jackyzha0/quartz/blob/hugo/.github/workflows/deploy.yaml)\n\n```yaml\n- name: Deploy  \n  uses: peaceiris/actions-gh-pages@v3  \n  with:  \n\tgithub_token: ${{ secrets.GITHUB_TOKEN }} # this can stay as is, GitHub fills this in for us!\n\tpublish_dir: ./public  \n\tpublish_branch: master\n\tcname: \u003cYOUR-DOMAIN\u003e\n```\n\nHave a custom domain? [Learn how to set it up with Quartz ](notes/custom%20Domain.md).\n\n---\n\nNow that your Quartz is live, let's figure out how to make Quartz really *yours*!\n\nüé® [Customizing Quartz](notes/config.md)\n\nHaving problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/notes/ignore-notes":{"title":"Ignoring Notes","content":"\n### Quartz Ignore\nEdit `ignoreFiles` in `config.toml` to include paths you'd like to exclude from being rendered.\n\n```toml\n...\nignoreFiles = [  \n    \"/content/templates/*\",  \n    \"/content/private/*\", \n    \"\u003cyour path here\u003e\"\n]\n```\n\n`ignoreFiles` supports the use of Regular Expressions (RegEx) so you can ignore patterns as well (e.g. ignoring all `.png`s by doing `\\\\.png$`).\nTo ignore a specific file, you can also add the tag `draft: true` to the frontmatter of a note.\n\n```markdown\n---\ntitle: Some Private Note\ndraft: true\n---\n...\n```\n\nMore details in [Hugo's documentation](https://gohugo.io/getting-started/configuration/#ignore-content-and-data-files-when-rendering).\n\n### Global Ignore\nHowever, just adding to the `ignoreFiles` will only prevent the page from being access through Quartz. If you want to prevent the file from being pushed to GitHub (for example if you have a public repository), you need to also add the path to the `.gitignore` file at the root of the repository.","lastmodified":"2022-06-27T15:53:04.062372983Z","tags":null},"/notes/obsidian":{"title":"Obsidian Vault Integration","content":"\n## Setup\nObsidian is the preferred way to use Quartz. You can either create a new Obsidian Vault or link one that your already have.\n\n### New Vault\nIf you don't have an existing Vault, [download Obsidian](https://obsidian.md/) and create a new Vault in the `/content` folder that you created and cloned during the [setup](notes/setup.md) step.\n\n### Linking an existing Vault\nThe easiest way to use an existing Vault is to copy all of your files (directory and hierarchies intact) into the `/content` folder.\n\n## Settings\nGreat, now that you have your Obsidian linked to your Quartz, let's fix some settings so that they play well.\n\n1. Under Options \u003e Files and Links, set the New link format to always use Absolute Path in Vault.\n2. Go to Settings \u003e Files \u0026 Links \u003e Turn \"on\" automatically update internal links.\n\n![Obsidian Settings](/notes/images/obsidian-settings.png)*Obsidian Settings*\n\n## Templates\nInserting front matter everytime you want to create a new Note gets annoying really quickly. Luckily, Obsidian supports templates which makes inserting new content really easily.\n\n**If you decide to overwrite the `/content` folder completely, don't remove the `/content/templates` folder!**\n\nHead over to Options \u003e Core Plugins and enable the Templates plugin. Then go to Options \u003e Hotkeys and set a hotkey for 'Insert Template' (I recommend `[cmd]+T`). That way, when you create a new note, you can just press the hotkey for a new template and be ready to go!\n","lastmodified":"2022-06-27T15:53:04.066372987Z","tags":null},"/notes/philosophy":{"title":"Quartz Philosophy","content":"\n\u003e ‚Äú[One] who works with the door open gets all kinds of interruptions, but [they] also occasionally gets clues as to what the world is and what might be important.‚Äù ‚Äî Richard Hamming\n\n## Why Quartz?\nHosting a public digital garden isn't easy. There are an overwhelming number of tutorials, resources, and guides for tools like [Notion](https://www.notion.so/), [Roam](https://roamresearch.com/), and [Obsidian](https://obsidian.md/), yet none of them have super easy to use *free* tools to publish that garden to the world.\n\nI've personally found that\n1. It's nice to access notes from anywhere\n2. Having a public digital garden invites open conversations\n3. It makes keeping personal notes and knowledge *playful and fun*\n\nI was really inspired by [Bianca](https://garden.bianca.digital/) and [Joel](https://joelhooks.com/digital-garden)'s digital gardens and wanted to try making my own.\n\n**The goal of Quartz is to make hosting your own public digital garden free and simple.** You don't even need your own website. Quartz does all of that for you and gives your own little corner of the internet.\n","lastmodified":"2022-06-27T15:53:04.066372987Z","tags":null},"/notes/preview-changes":{"title":"Preview Changes","content":"\nIf you'd like to preview what your Quartz site looks like before deploying it to the internet, here's exactly how to do that!\n\nNote that both of these steps need to be completed.\n\n## Install `hugo-obsidian`\nThis step will generate the list of backlinks for Hugo to parse. Ensure you have [Go](https://golang.org/doc/install) (\u003e= 1.16) installed.\n\n```shell\n# Install and link `hugo-obsidian` locally\n$ go install github.com/jackyzha0/hugo-obsidian@latest\n\n# Navigate to your local Quartz folder\n$ cd \u003clocation-of-your-local-quartz\u003e\n\n# Scrape all links in your Quartz folder and generate info for Quartz\n$ hugo-obsidian -input=content -output=assets/indices -index -root=.\n```\n\nIf you are running into an error saying that `command not found: hugo-obsidian`, make sure you set your `GOPATH` correctly! This will allow your terminal to correctly recognize hugo-obsidian as an executable.\n\nAfterwards, start the Hugo server as shown above and your local backlinks and interactive graph should be populated!\n\n##  Installing Hugo\nHugo is the static site generator that powers Quartz. [Install Hugo with \"extended\" Sass/SCSS version](https://gohugo.io/getting-started/installing/) first. Then,\n\n```\n# Navigate to your local Quartz folder\n$ cd \u003clocation-of-your-local-quartz\u003e\n\n# Start local server\n$ hugo server\n\n# View your site in a browser at http://localhost:1313/\n```\n","lastmodified":"2022-06-27T15:53:04.066372987Z","tags":null},"/notes/setup":{"title":"Setup","content":"\n## Making your own Quartz\nSetting up Quartz requires a basic understanding of `git`. If you are unfamiliar, [this resource](https://resources.nwplus.io/2-beginner/how-to-git-github.html) is a great place to start!\n\n### Forking\n\u003e A fork is a copy of a repository. Forking a repository allows you to freely experiment with changes without affecting the original project.\n\nNavigate to the GitHub repository for the Quartz project:\n\nüìÅ [Quartz Repository](https://github.com/jackyzha0/quartz)\n\nThen, Fork the repository into your own GitHub account. If you don't have an account, you can make on for free [here](https://github.com/join). More details about forking a repo can be found on [GitHub's documentation](https://docs.github.com/en/get-started/quickstart/fork-a-repo).\n\n### Cloning\nAfter you've made a fork of the repository, you need to download the files locally onto your machine. Ensure you have `git`, then type the following command replacing `YOUR-USERNAME` with your GitHub username.\n\n```shell\n$ git clone https://github.com/YOUR-USERNAME/quartz\n```\n\n## Editing\nGreat! Now you have everything you need to start editing and growing your digital garden. If you're ready to start writing content already, check out the recommended flow for editing notes in Quartz.\n\n‚úèÔ∏è [Editing Notes in Quartz](notes/editing.md)\n\nHaving problems? Checkout our [FAQ and Troubleshooting guide](notes/troubleshooting.md).\n\n## Updating\nHaven't updated Quartz in a while and want all the cool new optimizations? On Unix/Mac systems you can run the following command for a one-line update! This command will show you a log summary of all commits since you last updated, press `q` to acknowledge this. Then, it will show you each change in turn and press `y` to accept the patch or `n` to reject it. Usually you should press `y` for most of these unless it conflicts with existing changes you've made! \n\n```shell\nmake update\n\n# or, if you don't want the interactive parts and just want the update\nmake update-force\n```\n\nOr, manually checkout the changes yourself.\n\n\u003e ‚ö†Ô∏è **WARNING** ‚ö†Ô∏è\n\u003e\n\u003e If you customized the files in `data/`, or anything inside `layouts/`, your customization may be overwritten!\n\u003e Make sure you have a copy of these changes if you don't want to lose them.\n\n\n```shell\n# add Quartz as a remote host\ngit remote add upstream git@github.com:jackyzha0/quartz.git\n\n# index and fetch changes\ngit fetch upstream\ngit checkout -p upstream/hugo -- layouts .github Makefile assets/js assets/styles/base.scss assets/styles/darkmode.scss config.toml data \n```\n","lastmodified":"2022-06-27T15:53:04.066372987Z","tags":null},"/notes/showcase":{"title":"Showcase","content":"\nWant to see what Quartz can do? Here are some cool community gardens :)\n\n- [Quartz Documentation (this site!)](https://quartz.jzhao.xyz/)\n- [Jacky Zhao's Garden](https://garden.jzhao.xyz/)\n- [AWAGMI Intern Notes](https://notes.awagmi.xyz/)\n- [Shihyu's PKM](https://shihyuho.github.io/pkm/)\n- [Chloe's Garden](https://garden.chloeabrasada.online/)\n- [SlRvb's Site](https://slrvb.github.io/Site/)\n- [Course notes for Information Technology Advanced Theory](https://a2itnotes.github.io/quartz/)\n- [Brandon Boswell's Garden](https://brandonkboswell.com)\n- [Siyang's Courtyard](https://siyangsun.github.io/courtyard/)\n\nIf you want to see your own on here, submit a [Pull Request adding yourself to this file](https://github.com/jackyzha0/quartz/blob/hugo/content/notes/showcase.md)!\n","lastmodified":"2022-06-27T15:53:04.066372987Z","tags":null},"/notes/troubleshooting":{"title":"Troubleshooting and FAQ","content":"\nStill having trouble? Here are a list of common questions and problems people encounter when installing Quartz.\n\nWhile you're here, join our [Discord](https://discord.gg/cRFFHYye7t) :)\n\n### Does Quartz have Latex support?\nYes! See [CJK + Latex Support (ÊµãËØï)](notes/CJK%20+%20Latex%20Support%20(ÊµãËØï).md) for a brief demo.\n\n### Can I use \\\u003cObsidian Plugin\\\u003e in Quartz?\nUnless it produces direct Markdown output in the file, no. There currently is no way to bundle plugin code with Quartz.\n\nThe easiest way would be to add your own HTML partial that supports the functionality you are looking for.\n\n### My GitHub pages is just showing the README and not Quartz\nMake sure you set the source to deploy from `master` (and not `hugo`) using `/ (root)`! See more in the [hosting](/notes/hosting) guide\n\n### Some of my pages have 'January 1, 0001' as the last modified date\nThis is a problem caused by `git` treating files as case-insensitive by default and some of your posts probably have capitalized file names. You can turn this off in your Quartz by running this command.\n\n```shell\n# in the root of your Quartz (same folder as config.toml)\ngit config core.ignorecase true\n\n# or globally (not recommended)\ngit config --global core.ignorecase true\n```\n\n### Can I publish only a subset of my pages?\nYes! Quartz makes selective publishing really easy. Heres a guide on [excluding pages from being published](notes/ignore%20notes.md).\n\n### Can I host this myself and not on GitHub Pages?\nYes! All built files can be found under `/public` in the `master` branch. More details under [hosting](notes/hosting.md).\n\n### `command not found: hugo-obsidian`\nMake sure you set your `GOPATH` correctly! This will allow your terminal to correctly recognize `hugo-obsidian` as an executable.\n\n```shell\n# Add the following 2 lines to your ~/.bash_profile\nexport GOPATH=/Users/$USER/go\nexport PATH=$GOPATH/bin:$PATH\n\n# In your current terminal, to reload the session\nsource ~/.bash_profile\n```\n\n### How come my notes aren't being rendered?\nYou probably forgot to include front matter in your Markdown files. You can either setup [Obsidian](notes/obsidian.md) to do this for you or you need to manually define it. More details in [the 'how to edit' guide](notes/editing.md).\n\n### My custom domain isn't working!\nWalk through the steps in [the hosting guide](notes/hosting.md) again. Make sure you wait 30 min to 1 hour for changes to take effect.\n\n### How do I setup Google Analytics?\nYou can edit it in `config.toml` and either use a V3 (UA-) or V4 (G-) tag.\n\n### How do I change the content on the home page?\nTo edit the main home page, open `/content/_index.md`.\n\n### How do I change the colours?\nYou can change the theme by editing `assets/custom.scss`. More details on customization and themeing can be found in the [customization guide](notes/config.md).\n\n### How do I add images?\nYou can put images anywhere in the `/content` folder.\n\n```markdown\nExample image (source is in content/notes/images/example.png)\n![Example Image](/content/notes/images/example.png)\n```\n\n### My Interactive Graph and Backlinks aren't up to date\nBy default, the `linkIndex.json` (which Quartz needs to generate the Interactive Graph and Backlinks) are not regenerated locally. To set that up, see the guide on [local editing](notes/editing.md)\n\n### Can I use React/Vue/some other framework?\nNot out of the box. You could probably make it work by editing `/layouts/_default/single.html` but that's not what Quartz is designed to work with. 99% of things you are trying to do with those frameworks you can accomplish perfectly fine using just vanilla HTML/CSS/JS.\n\n## Still Stuck?\nQuartz isn't perfect! If you're still having troubles, file an issue in the GitHub repo with as much information as you can reasonably provide. Alternatively, you can message me on [Twitter](https://twitter.com/_jzhao) and I'll try to get back to you as soon as I can.\n\nüêõ [Submit an Issue](https://github.com/jackyzha0/quartz/issues)","lastmodified":"2022-06-27T15:53:04.066372987Z","tags":null}}